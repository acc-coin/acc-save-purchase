version: '3.7'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    ports:
      - '5432:5432'
    restart: always
    command:
      [
        "postgres",
        "-c", "shared_preload_libraries=pg_stat_statements",
        "-c", "max_connections=1000"
      ]
    environment:
      POSTGRES_PASSWORD: 12345678
      POSTGRES_USER: agora
      POSTGRES_DB: postgres
      PGDATA: /postgresql/data
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - postgres_db:/postgresql/data
    networks:
      - store_purchase_network

  ipfs0:
    container_name: ipfs0
    image: ipfs/kubo:release
    ports:
      #     - "4001:4001" # ipfs swarm - expose if needed/wanted
      - "5001:5001" # ipfs api - expose if needed/wanted
      - "8080:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - node0_ipfs:/data/ipfs
    networks:
      - store_purchase_network

  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: cluster0
      CLUSTER_SECRET: "579d651b15b4d4e55ddea67bc611bdbe4cf0b0d8eeaafb6a472ab86322c3d972"
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
      - "9094:9094"
      - "9095:9095" # Cluster IPFS Proxy endpoint
      - "9096:9096" # Cluster swarm endpoint
    volumes:
      - node0_ipfs_cluster:/data/ipfs-cluster
    networks:
      - store_purchase_network
#
#  ##################################################################################
#  ## Cluster PEER 1 ################################################################
#  ##################################################################################
#
#  ipfs1:
#    container_name: ipfs1
#    image: ipfs/kubo:release
#    volumes:
#      - node1_ipfs:/data/ipfs
#    networks:
#      - store_purchase_network
#
#  cluster1:
#    container_name: cluster1
#    image: ipfs/ipfs-cluster:latest
#    depends_on:
#      - ipfs1
#    environment:
#      CLUSTER_PEERNAME: cluster1
#      CLUSTER_SECRET: "579d651b15b4d4e55ddea67bc611bdbe4cf0b0d8eeaafb6a472ab86322c3d972"
#      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001
#      CLUSTER_CRDT_TRUSTEDPEERS: '*'
#      CLUSTER_MONITORPINGINTERVAL: 2s
#    volumes:
#      - node1_ipfs_cluster:/data/ipfs-cluster
#    networks:
#      - store_purchase_network
#
#  ##################################################################################
#  ## Cluster PEER 2 ################################################################
#  ##################################################################################
#
#  # See Cluster PEER 0 for comments (all removed here and below)
#  ipfs2:
#    container_name: ipfs2
#    image: ipfs/kubo:release
#    volumes:
#      - node2_ipfs:/data/ipfs
#    networks:
#      - store_purchase_network
#
#  cluster2:
#    container_name: cluster2
#    image: ipfs/ipfs-cluster:latest
#    depends_on:
#      - ipfs2
#    environment:
#      CLUSTER_PEERNAME: cluster2
#      CLUSTER_SECRET: "579d651b15b4d4e55ddea67bc611bdbe4cf0b0d8eeaafb6a472ab86322c3d972"
#      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs2/tcp/5001
#      CLUSTER_CRDT_TRUSTEDPEERS: '*'
#      CLUSTER_MONITORPINGINTERVAL: 2s
#    volumes:
#      - node2_ipfs_cluster:/data/ipfs-cluster
#    networks:
#      - store_purchase_network

#
#  store-purchase:
#    container_name: store-purchase
#    image: bosagora/acc-save-purchase:test
#    ports:
#      - "3030:3030"
#    volumes:
#      - "./config/:/app/config/"
#      - "./db/:/app/db/"
#    restart: always
#    extra_hosts:
#      - host.docker.internal:host-gateway
#    environment:
#      PRODUCTION_NET_URL: "http://host.docker.internal:8545"
#      PRODUCTION_CHAIN_ID: "24680"
#      HOST_IP: "0.0.0.0"
#      HOST_PORT: 3030
#      LOGGING_LEVEL: "verbose"
#      DATABASE_PATH: "db/purchase.db"
#      NODE_INTERVAL: 60
#      NODE_MAX_TXS: 256
#      NODE_SEND_INTERVAL: 30
#      NODE_IPFS_API_URL: "http://ipfs0:5001"
#      NODE_IPFS_GATEWAY_URL: "http://ipfs0:8080"
#      NODE_IPFS_TEST: false
#      MANAGER_KEY: "0x75c9c2faed55e507ca76bc866d7ca9113dc46e27d714960cf08ad0cb271adb52"
#      ACCESS_KEY: "0x2c93e943c0d7f6f1a42f53e116c52c40fe5c1b428506dc04b290f2a77580a342"
#      STORE_PURCHASE_CONTRACT_ADDRESS: "0x8bFCef13C483C8FA877262Bbb562A156E5233fe3"
#    command: sh -c "/app/docker/entrypoint.sh"
#    networks:
#      - store_purchase_network
#
#  store-purchase-client:
#    container_name: store-purchase-client
#    image: acc-coin/acc-save-purchase:test
#    restart: always
#    environment:
#      SERVER_URL: "http://store-purchase:3030"
#      ACCESS_KEY: "0x2c93e943c0d7f6f1a42f53e116c52c40fe5c1b428506dc04b290f2a77580a342"
#      INTERVAL: 3
#      BLOCK_INTERVAL: 600
#    command: sh -c "/app/docker/entrypoint_client.sh"
#    networks:
#      - store_purchase_network

volumes:
  postgres_db:
  node0_ipfs:
  node0_ipfs_cluster:
#  node1_ipfs:
#  node1_ipfs_cluster:
#  node2_ipfs:
#  node2_ipfs_cluster:


networks:
  store_purchase_network:
    driver: bridge
